package view;

import database.KoneksiDB;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.Date;
import helper.PDFGenerator;

public class Penyewaan extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public Penyewaan() {
        initComponents();
        setLocationRelativeTo(null); // Add this line to center the form
        loadData();
        loadComboBoxes();
        updateButtonStates(false);  // Initialize button states
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        input = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnUbah1 = new javax.swing.JButton();
        btnHapus1 = new javax.swing.JButton();
        btnTambah3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pelanggan = new javax.swing.JComboBox<>();
        pc = new javax.swing.JComboBox<>();
        totalHarga = new javax.swing.JTextField();
        tglSewa = new com.toedter.calendar.JDateChooser();
        tglKemabali = new com.toedter.calendar.JDateChooser();
        table = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        btnCari1 = new javax.swing.JButton();
        btnCetak1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Penyewaan");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(0, 1));

        input.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        java.awt.GridBagLayout inputLayout = new java.awt.GridBagLayout();
        inputLayout.columnWidths = new int[] {0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0, 16, 0};
        inputLayout.rowHeights = new int[] {0, 11, 0, 11, 0, 11, 0, 11, 0, 11, 0, 11, 0, 11, 0, 11, 0};
        input.setLayout(inputLayout);

        jLabel7.setText("Pelanggan :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        input.add(jLabel7, gridBagConstraints);

        jLabel8.setText("Model PC :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        input.add(jLabel8, gridBagConstraints);

        jLabel9.setText("Tanggal Sewa :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        input.add(jLabel9, gridBagConstraints);

        btnUbah1.setBackground(new java.awt.Color(102, 102, 102));
        btnUbah1.setForeground(new java.awt.Color(255, 255, 255));
        btnUbah1.setText("Ubah");
        btnUbah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbah1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        input.add(btnUbah1, gridBagConstraints);

        btnHapus1.setBackground(new java.awt.Color(204, 0, 0));
        btnHapus1.setForeground(new java.awt.Color(255, 255, 255));
        btnHapus1.setText("Hapus");
        btnHapus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapus1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        input.add(btnHapus1, gridBagConstraints);

        btnTambah3.setBackground(new java.awt.Color(0, 153, 51));
        btnTambah3.setForeground(new java.awt.Color(242, 242, 242));
        btnTambah3.setText("Tambahkan");
        btnTambah3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambah3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        input.add(btnTambah3, gridBagConstraints);

        jLabel1.setText("Tanggal Pengembalian :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        input.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Total Biaya :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_END;
        input.add(jLabel2, gridBagConstraints);

        pelanggan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        input.add(pelanggan, gridBagConstraints);

        pc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        input.add(pc, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        input.add(totalHarga, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        input.add(tglSewa, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 30;
        input.add(tglKemabali, gridBagConstraints);

        getContentPane().add(input);

        table.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        table.setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Cari PC");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        table.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        table.add(jTextField4, gridBagConstraints);

        btnCari1.setText("Cari");
        btnCari1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCari1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 20, 4);
        table.add(btnCari1, gridBagConstraints);

        btnCetak1.setText("Cetak");
        btnCetak1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetak1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        table.add(btnCetak1, gridBagConstraints);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(400, 300));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTable2.setPreferredSize(new java.awt.Dimension(90, 500));
        jTable2.setShowGrid(true);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 300;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        table.add(jScrollPane4, gridBagConstraints);

        getContentPane().add(table);

        jMenuBar1.setBackground(new java.awt.Color(204, 255, 204));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setBorderPainted(false);

        jMenu2.setBackground(new java.awt.Color(204, 255, 204));
        jMenu2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu2.setText("   Pelanggan  ");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(204, 255, 204));
        jMenu3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenu3.setText("  PC   ");
        jMenu3.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUbah1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnUbah1ActionPerformed
        if (selectedId == -1) {
            JOptionPane.showMessageDialog(this, "Pilih data terlebih dahulu");
            return;
        }

        try (Connection conn = KoneksiDB.getConnection()) {
            String sql = "UPDATE penyewaan SET " +
                        "id_pelanggan = (SELECT id_pelanggan FROM pelanggan WHERE nama=?), " +
                        "id_pc = (SELECT id_pc FROM pc WHERE model=?), " +
                        "tanggal_sewa=?, tanggal_kembali=?, total_biaya=? " +
                        "WHERE id_penyewaan=?";
                        
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, pelanggan.getSelectedItem().toString());
            stmt.setString(2, pc.getSelectedItem().toString());
            stmt.setDate(3, new java.sql.Date(tglSewa.getDate().getTime()));
            stmt.setDate(4, new java.sql.Date(tglKemabali.getDate().getTime()));
            stmt.setDouble(5, Double.parseDouble(totalHarga.getText()));
            stmt.setInt(6, selectedId);
            
            stmt.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Data berhasil diubah");
            loadData();
            clearForm();
            selectedId = -1;
            isEditing = false;
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }// GEN-LAST:event_btnUbah1ActionPerformed

    private void btnHapus1ActionPerformed(java.awt.event.ActionEvent evt) {
    if (selectedId == -1) {
        JOptionPane.showMessageDialog(this, "Pilih data terlebih dahulu");
        return;
    }

    int confirm = JOptionPane.showConfirmDialog(this, 
        "Apakah Anda yakin ingin menghapus data ini?", 
        "Konfirmasi Hapus", 
        JOptionPane.YES_NO_OPTION);
        
    if (confirm == JOptionPane.YES_OPTION) {
        try (Connection conn = KoneksiDB.getConnection()) {
            String sql = "DELETE FROM penyewaan WHERE id_penyewaan=?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, selectedId);
            
            int rowsAffected = stmt.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus");
                loadData();
                clearForm();
                selectedId = -1;
                isEditing = false;
                updateButtonStates(false);
            } else {
                JOptionPane.showMessageDialog(this, "Data tidak dapat dihapus");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
}

    private void btnTambah3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTambah3ActionPerformed
        try (Connection conn = KoneksiDB.getConnection()) {
            String sql = "INSERT INTO penyewaan (id_pelanggan, id_pc, tanggal_sewa, tanggal_kembali, total_biaya) " +
                    "VALUES ((SELECT id_pelanggan FROM pelanggan WHERE nama=?), " +
                    "(SELECT id_pc FROM pc WHERE model=?), ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, pelanggan.getSelectedItem().toString());
            stmt.setString(2, pc.getSelectedItem().toString());
            stmt.setDate(3, new java.sql.Date(tglSewa.getDate().getTime()));
            stmt.setDate(4, new java.sql.Date(tglKemabali.getDate().getTime()));
            stmt.setDouble(5, Double.parseDouble(totalHarga.getText()));
            stmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
            loadData();
            clearForm();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }// GEN-LAST:event_btnTambah3ActionPerformed

    private void btnCari1ActionPerformed(java.awt.event.ActionEvent evt) {
    String searchText = jTextField4.getText().trim();
    
    if (searchText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Masukkan kata kunci pencarian terlebih dahulu!");
        return;
    }
    
    searchText = searchText.toLowerCase();
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.setRowCount(0);

    try (Connection conn = KoneksiDB.getConnection()) {
        String sql = "SELECT p.*, pel.nama, pc.model FROM penyewaan p " +
                    "JOIN pelanggan pel ON p.id_pelanggan = pel.id_pelanggan " +
                    "JOIN pc ON p.id_pc = pc.id_pc " +
                    "WHERE LOWER(pel.nama) LIKE ? OR LOWER(pc.model) LIKE ?";
                    
        PreparedStatement stmt = conn.prepareStatement(sql);
        stmt.setString(1, "%" + searchText + "%");
        stmt.setString(2, "%" + searchText + "%");
        
        ResultSet rs = stmt.executeQuery();
        
        boolean found = false;
        while (rs.next()) {
            found = true;
            model.addRow(new Object[] {
                rs.getInt("id_penyewaan"),
                rs.getString("nama"),
                rs.getString("model"),
                rs.getDate("tanggal_sewa"),
                rs.getDate("tanggal_kembali"),
                rs.getBigDecimal("total_biaya")
            });
        }
        
        if (!found) {
            JOptionPane.showMessageDialog(this, "Data tidak ditemukan!");
            loadData(); // Reset table to show all data
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
    }
}

    private void btnCetak1ActionPerformed(java.awt.event.ActionEvent evt) {
    try {
        String[] headers = {"Pelanggan", "PC", "Tanggal Sewa", "Tanggal Kembali", "Total"};
        String filename = "laporan_penyewaan_" + System.currentTimeMillis() + ".pdf";
        PDFGenerator.generatePDF("Laporan Penyewaan PC", headers, jTable2, filename);
        JOptionPane.showMessageDialog(this, "PDF berhasil dibuat: " + filename);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error membuat PDF: " + e.getMessage());
    }
}

    private int selectedId = -1;  // Add this field at class level

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jTable2MouseClicked
    int row = jTable2.getSelectedRow();
    if (row != -1) {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        int clickedId = Integer.parseInt(model.getValueAt(row, 0).toString());
        
        if (isEditing && clickedId == selectedId) {
            clearForm();
            isEditing = false;
            selectedId = -1;
            updateButtonStates(false);
        } else {
            selectedId = clickedId;
            pelanggan.setSelectedItem(model.getValueAt(row, 1).toString());
            pc.setSelectedItem(model.getValueAt(row, 2).toString());
            tglSewa.setDate((Date) model.getValueAt(row, 3));
            tglKemabali.setDate((Date) model.getValueAt(row, 4));
            totalHarga.setText(model.getValueAt(row, 5).toString());
            isEditing = true;
            updateButtonStates(true);
        }
    }
}// GEN-LAST:event_jTable2MouseClicked

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenu2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jMenu2ActionPerformed

    private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jMenu3ActionPerformed

    }// GEN-LAST:event_jMenu3ActionPerformed

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        PC pcForm = new PC(this);
        pcForm.setVisible(true);
        this.setVisible(false);
    }// GEN-LAST:event_jMenu3MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        Pelanggan pelangganForm = new Pelanggan(this);
        pelangganForm.setVisible(true);
        this.setVisible(false);
    }// GEN-LAST:event_jMenu2MouseClicked

    private void loadData() {
        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
        model.setColumnIdentifiers(new String[] { "ID", "Pelanggan", "PC", "Tgl Sewa", "Tgl Kembali", "Total" });

        try (Connection conn = KoneksiDB.getConnection();
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery(
                        "SELECT p.*, pel.nama, pc.model FROM penyewaan p " +
                                "JOIN pelanggan pel ON p.id_pelanggan = pel.id_pelanggan " +
                                "JOIN pc ON p.id_pc = pc.id_pc")) {

            while (rs.next()) {
                model.addRow(new Object[] {
                        rs.getInt("id_penyewaan"),  // Add ID column
                        rs.getString("nama"),
                        rs.getString("model"),
                        rs.getDate("tanggal_sewa"),
                        rs.getDate("tanggal_kembali"),
                        rs.getBigDecimal("total_biaya")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

        // Hide ID column
        jTable2.getColumnModel().getColumn(0).setMinWidth(0);
        jTable2.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable2.getColumnModel().getColumn(0).setWidth(0);
    }

    private void loadComboBoxes() {
        try (Connection conn = KoneksiDB.getConnection()) {
            // Load Pelanggan
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM pelanggan");
            pelanggan.removeAllItems();
            while (rs.next()) {
                pelanggan.addItem(rs.getString("nama"));
            }

            // Load PC
            rs = stmt.executeQuery("SELECT * FROM pc");
            pc.removeAllItems();
            while (rs.next()) {
                pc.addItem(rs.getString("model"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }

    private void clearForm() {
        pelanggan.setSelectedIndex(0);
        pc.setSelectedIndex(0);
        tglSewa.setDate(null);
        tglKemabali.setDate(null);
        totalHarga.setText("");
        updateButtonStates(false);
    }

    private void updateButtonStates(boolean isEditMode) {
        btnTambah3.setEnabled(!isEditMode);
        btnUbah1.setEnabled(isEditMode);
        btnHapus1.setEnabled(isEditMode);
    }

    public void refreshComboBoxes() {
        loadComboBoxes();
    }

    private boolean isEditing = false;

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penyewaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penyewaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penyewaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penyewaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penyewaan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari1;
    private javax.swing.JButton btnCetak1;
    private javax.swing.JButton btnHapus1;
    private javax.swing.JButton btnTambah3;
    private javax.swing.JButton btnUbah1;
    private javax.swing.JPanel input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JComboBox<String> pc;
    private javax.swing.JComboBox<String> pelanggan;
    private javax.swing.JPanel table;
    private com.toedter.calendar.JDateChooser tglKemabali;
    private com.toedter.calendar.JDateChooser tglSewa;
    private javax.swing.JTextField totalHarga;
    // End of variables declaration//GEN-END:variables
}
